on:
  workflow_call:

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Run Latest Image
      run: |
        ORG=${GITHUB_REPOSITORY%%/*}
        REPO=${GITHUB_REPOSITORY##*/}
        echo "ORG=$ORG" >> $GITHUB_ENV
        echo "REPO=$REPO" >> $GITHUB_ENV
        echo "org: $ORG"
        echo "repo: $REPO"

        export TAG=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /orgs/$ORG/packages/container/$REPO/versions \
          | jq -r '.[].metadata.container.tags | .[0]' \
          | sort --version-sort \
          | tail -n1)

        IMAGE="ghcr.io/${GITHUB_REPOSITORY,,}:$TAG"
        docker pull $IMAGE
        docker run -p 8081:8081 -d $IMAGE

    - name: Checkout Spec Repo
      uses: actions/checkout@v3
      with:
        repository: boxboat-github-practice/simple-tracker-spec

    - name: Set Initial Statuses
      if: ${{ github.event_name == 'pull_request' && (github.event.action == 'opened'  || github.event.action == 'edited') }}
      run: |
        function set-status() {
          OWNER=boxboat-github-practice
          REPO=simple-tracker-express-api
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$OWNER/$REPO/statuses/$GITHUB_SHA \
            -d "{\"state\":\"$2\",\"target_url\":\"https://github.com/$OWNER/simple-tracker-express-api/actions/runs/$GITHUB_RUN_ID/jobs/$GITHUB_JOB\",\"description\":\"$3\",\"context\":\"$1\"}"
        }

        set-status "api-test/employees" "pending" "Running Employee tests"
        set-status "api-test/clients" "pending" "Running Client tests"
        set-status "api-test/contracts" "pending" "Running Contract tests"
        set-status "api-test/history" "pending" "Running History tests"
        
        echo "SET_STATUS=true" >> $GITHUB_ENV

    - name: install newman
      run: npm install -g newman

    - name: run newman
      run: |
        if [ "$SET_STATUS" == "true" ]; then
          for i in employees clients contracts history; do
            newman run -e Local.postman_environment.json --folder $i test-collection.json -r json
            STATUS=$(jq -r 'if (.run.failures | length) > 0 then "failure" else "success" end' newman/newman-run-report*)
            DESCRIPTION=$(jq '.run.failures[0].error.message' newman/newman-run-report*)
            set-status "api-test/$i" $STATUS "$DESCRIPTION"
            rm newman/*
          done
        fi

        newman run -e Local.postman_environment.json test-collection.json 

