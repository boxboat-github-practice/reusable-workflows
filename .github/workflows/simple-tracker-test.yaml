on:
  workflow_call:
    inputs:
      port:
        required: false
        type: string
        default: '8081'

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  test:
    continue-on-error: true
    strategy:
      matrix:
        folder: ['employees', 'clients', 'contracts', 'history']
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Log into registry 
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}  

    - name: Run Latest Image
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        ORG=${GITHUB_REPOSITORY%%/*}
        REPO=${GITHUB_REPOSITORY##*/}
        echo "ORG=$ORG" >> $GITHUB_ENV
        echo "REPO=$REPO" >> $GITHUB_ENV
        echo "org: $ORG"
        echo "repo: $REPO"

        TAG=$(gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /orgs/$ORG/packages/container/$REPO/versions \
          | jq -r '.[].metadata.container.tags | .[0]' \
          | sort --version-sort \
          | tail -n1)

        IMAGE="ghcr.io/${GITHUB_REPOSITORY,,}:$TAG"
        docker pull $IMAGE
        docker run -p 8081:${{ inputs.port }} -d $IMAGE

    - name: Build and Run new local version
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        docker build . -t api
        docker run -p 8081:${{ inputs.port }} -d api

    - name: Checkout Spec Repo
      uses: actions/checkout@v3
      with:
        repository: boxboat-github-practice/simple-tracker-spec

    - name: Set Initial Statuses
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        function set-status() {
          TARGET_URL="https://github.com/$OWNER/$REPO/actions/runs/$GITHUB_RUN_ID/jobs/$GITHUB_JOB"
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$OWNER/$REPO/statuses/$GITHUB_SHA \
            -d "{\"state\":\"$2\",\"target_url\":\"$TARGET_URL\",\"description\":\"$3\",\"context\":\"$1\"}"
        }

        set-status "api-test/${{ matrix.folder }}" "pending" "Running tests"
        
        echo "SET_STATUS=true" >> $GITHUB_ENV

    - name: install newman
      run: npm install -g newman newman-reporter-basicmarkdown

    - name: run newman
      run: |
        function set-status() {
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$OWNER/$REPO/statuses/$GITHUB_SHA \
            -d "{\"state\":\"$2\",\"target_url\":\"https://github.com/$OWNER/$REPO/actions/runs/$GITHUB_RUN_ID/jobs/${{ github.run_id }}\",\"description\":\"$3\",\"context\":\"$1\"}"
        }

        if [ "$SET_STATUS" == "true" ]; then
          newman run -e Local.postman_environment.json --folder ${{ matrix.folder }} sql-test-collection.json -r json,cli
          STATUS=$(jq -r 'if (.run.failures | length) > 0 then "failure" else "success" end' newman/newman-run-report*)
          DESCRIPTION=$(jq '.run.failures[0].error.message' newman/newman-run-report*)
          set-status "api-test/$i" "$STATUS" "$DESCRIPTION"
        else
          newman run -e Local.postman_environment.json --folder ${{ matrix.folder }} sql-test-collection.json -r cli
        fi

    - name: upload artifacts
      uses: actions/upload-artifact@v3
      if: github.event.upload_artifact
      with:
        name: boxboat-simple-tracker-express-api-${{ github.run_number }}-${{ matrix.folder }}-markdown
        path: newman
        retention-days: 1
